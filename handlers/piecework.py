from aiogram import F, Router
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.enums import ParseMode
from config import GROUP_ID
from states import Form
from keyboards import get_cancel_keyboard, get_main_keyboard
from datetime import datetime

router = Router()

@router.message(F.text == "üí∞ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–¥–µ–ª—å–Ω—É—é")
async def handle_piecework_prompt(message: Message, state: FSMContext):
    await state.set_state(Form.piecework)
    await message.answer(
        "‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
        "<b>–û–±—ä–µ–∫—Ç, –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã, –§–∞–º–∏–ª–∏–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</b>\n\n"
        "–ü—Ä–∏–º–µ—Ä: <code>–£—Å–ø–µ–Ω—Å–∫–∞—è 6, –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∏–Ω—Ç—É—Å–æ–≤ –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ 34, –†–∞–¥–∂–∞–±–æ–≤ –£—Å–º–æ–Ω–æ–≤</code>",
        parse_mode=ParseMode.HTML,
        reply_markup=get_cancel_keyboard()
    )

@router.message(Form.piecework, F.text)
async def handle_piecework_data(message: Message, state: FSMContext):
    parts = [part.strip() for part in message.text.split(',')]
    if len(parts) < 3:
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
            "<b>–û–±—ä–µ–∫—Ç, –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã, –§–∞–º–∏–ª–∏–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</b>\n\n"
            "–ü—Ä–∏–º–µ—Ä: <code>–£—Å–ø–µ–Ω—Å–∫–∞—è 6, –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∏–Ω—Ç—É—Å–æ–≤ –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ 34, –†–∞–¥–∂–∞–±–æ–≤ –£—Å–º–æ–Ω–æ–≤</code>",
            parse_mode=ParseMode.HTML
        )
        return
    location = parts[0]
    work = parts[1]
    names = ', '.join(parts[2:])
    if len(location) > 100:
        return await message.answer("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ. –ú–∞–∫—Å–∏–º—É–º 100 —Å–∏–º–≤–æ–ª–æ–≤.")
    if len(work) > 200:
        return await message.answer("‚ùå –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ. –ú–∞–∫—Å–∏–º—É–º 200 —Å–∏–º–≤–æ–ª–æ–≤.")
    current_time = datetime.now().strftime("%H:%M")
    group_msg = (
        f"üîÄ <b>–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–¥–µ–ª—å–Ω—É—é:</b>\n"
        f"‚è∞ –í—Ä–µ–º—è: {current_time}\n"
        f"üìç –û–±—ä–µ–∫—Ç: {location}\n"
        f"üìù –†–∞–±–æ—Ç–∞: {work}\n"
        f"üßç –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏: {names}"
    )
    await message.bot.send_message(GROUP_ID, group_msg, parse_mode=ParseMode.HTML)
    await state.clear()
    await message.answer(
        "‚úÖ –î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –≥—Ä—É–ø–ø—É!",
        reply_markup=get_main_keyboard()
    )
